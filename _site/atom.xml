<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

   <title>Ming's</title>
   <link href="http://blog.yunnuy.com/atom.xml" rel="self" type="application/atom+xml"/>
   <link href="http://blog.yunnuy.com" rel="alternate" type="text/html" />
   <updated>2014-05-27T23:23:42+08:00</updated>
   <id>http://blog.yunnuy.com</id>
   <author>
     <name>ming</name>
     <email>feitian124@gmail.com</email>
   </author>

   
   <entry>
     <title>ember学习笔记一</title>
     <link href="http://blog.yunnuy.com/thoughts/2014/05/08/emberjs-learn-1.html"/>
     <updated>2014-05-08T22:16:22+08:00</updated>
     <id>http://blog.yunnuy.com/thoughts/2014/05/08/emberjs-learn-1</id>
     <content type="html">&lt;p&gt;换了个做web的小公司,找回不少工作的激情。不但有心仪的 ruby on rails，还有很火的前端 MVC 框架 emberjs，感觉立马进化到了21世纪。
rails 有10多分钟造一个blog的教程，ember好不逊色，也有10多分钟造一个blog的教程，页面易用程度等甚至更甚一畴。&lt;/p&gt;

&lt;p&gt;先写一些体会,好的和相似的地方：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;有些理念和rails相似，如命名约定；大量使用各种钩子；也是使用模板再编译成HTML。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;绑定很强大。双向绑定，单向绑定，计算属性，观察者模式等，让变量的同步简单。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;事件处理很强大。通过捕捉原生事件，转化为ember事件，再逐级处理，强大又简单。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;充分使用ember特性，内置组件很强大。举个例子，内置的输入组件, 如果不指定type，是普通的输入框；指定为number，则变成有增减按钮的输入组件；如果是range，则变成一个拖动条。一个type的变动，可以改变视图和行为，省去大量javascript代码。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;不好或者不相同的地方：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;学习成本有点高，坑也不少。有些约定不直观，不了解你不知道如何下手。如绑定model后要通过content属性访问。。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;javascript 感觉没有 ruby 优雅，一些实现看上去就没有 rails 简洁。如指定 has_many; &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;javascript 的作用域和上下文不是很明显, 要理解清楚。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;不要忘记这里的 M V C 都是在浏览器中运行，都是javascript对象。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
   </entry>
   
   <entry>
     <title>手机自助点餐</title>
     <link href="http://blog.yunnuy.com/thoughts/2014/03/01/shou-ji-zi-zhu-dian-can.html"/>
     <updated>2014-03-01T19:18:02+08:00</updated>
     <id>http://blog.yunnuy.com/thoughts/2014/03/01/shou-ji-zi-zhu-dian-can</id>
     <content type="html">&lt;p&gt;小白领 A和女朋友B逛街，肚子饿了然后掏出手机，团了一家附近的餐厅吃饭。
走进餐厅，门口写着: 手机自助点餐，立减5元，还能享受免费wifi。&lt;/p&gt;

&lt;p&gt;A找了一个桌子坐下，发现桌子上贴着二维码，nfc标签和一个网站，A果断掏出手机，
由于没有nfc，扫了下桌子上的二维码，手机自动连上wifi并打开餐厅的订餐页面。
菜品很新，有多张图和详细的描述，还有之前吃过人的评价。A点了人气最高的三个菜品，
并信用卡付了款。对了，他还用了上次来送的饮料劵，他居然忘记去年不知道啥时候来过
这家店了，还好送的劵下个月过期。&lt;/p&gt;

&lt;p&gt;A连着wifi刷了微博，找了几个最热的段子和女朋友分享，不到10分钟菜就上来了。嗯，
份量足，色香味俱全。酒足饭饱之后，A忍不住给了个5星好评。&lt;/p&gt;

&lt;p&gt;叮咚，老板又送了一张饮料劵～&lt;/p&gt;
</content>
   </entry>
   
   <entry>
     <title>javascript callback(回调)</title>
     <link href="http://blog.yunnuy.com/work/2014/03/01/javascript-callback.html"/>
     <updated>2014-03-01T19:18:02+08:00</updated>
     <id>http://blog.yunnuy.com/work/2014/03/01/javascript-callback</id>
     <content type="html">&lt;p&gt;最近在做前端开发工作,所以写了不少javascript代码.一直对javascript有成见,从前觉得就是浏览器里面做做跑马灯效果,做做验证啊等不严肃的语言. 现在看来我错了,javascript社区很活跃, 从jquery到前端mvc,到后端nodejs, grunt等, javascript的威力越来越强大.&lt;/p&gt;

&lt;p&gt;javascript是单线程的语言,很多事件处理需要用到回调,从而也需要保留上下文,故又大量使用必包.最近自己用javascript的这些特性解决了一个碰到的难题,我对javascript的理解也开始上了一个台阶.&lt;/p&gt;

&lt;p&gt;场景很简单,我需要在页面上面用canvas画多个图片,故需要在draw函数之前让image对象提前准备好.可是图片的加载都是异步的,我只能在onload回调函数中知晓图片加载完成; 我可以在onload里面维护一个计数器,然后判断计数器如果达到图片个数,我就知道所有图片加载好了.&lt;/p&gt;

&lt;p&gt;然后我可以执行一个函数, 可是这个函数我现在还没有呢, 又或者我想图片加载完之后可以按需调用我需要的函数,怎么办呢? 只能用必包.&lt;/p&gt;

&lt;p&gt;具体看代码:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;  &lt;span class=&quot;cm&quot;&gt;/* --------------- call back codes, for example:&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;     loadImages([&amp;#39;1.gif&amp;#39;, &amp;#39;2.gif&amp;#39;, &amp;#39;3.gif&amp;#39;]).done(function(images){&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;       alert(images.length);                     //alerts 3&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;       alert(images[0].src+&amp;quot; &amp;quot;+images[0].width); //alerts &amp;#39;1.gif 220&amp;#39;&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;     })&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;   */&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;loadImages&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;imgs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[];&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cnt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;oneLoaded&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;cnt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cnt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;allLoaded&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;imgs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;allLoaded&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){};&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;forEach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
      &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;tmp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Image&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;tmp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;tmp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onload&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;oneLoaded&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;tmp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onerror&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tmp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39; failed to load!&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;imgs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tmp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;//return blank object with done() method&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;allLoaded&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;allLoaded&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
   </entry>
   
   <entry>
     <title>Game theory - 博弈论</title>
     <link href="http://blog.yunnuy.com/resources/2012/08/24/game-theory.html"/>
     <updated>2012-08-24T23:31:00+08:00</updated>
     <id>http://blog.yunnuy.com/resources/2012/08/24/game-theory</id>
     <content type="html">&lt;p&gt;游戏中双方为了达到各自的目标和利益，各方必须考虑对手的各种可能的行动方案，并力图选取对自己最为有利或最为合理的方案。
博弈论考虑游戏中的个体的预测行为和实际行为，并研究它们的优化策略。&lt;/p&gt;

&lt;h2&gt;非零和博弈&lt;/h2&gt;

&lt;p&gt;是一种非合作下的博弈，博弈中各方的收益或损失的总和不是零值，自己的所得并不与他人的所失的大小相等。&lt;strong&gt;双方有合作的可能&lt;/strong&gt;。&lt;/p&gt;

&lt;h3&gt;囚徒困境&lt;/h3&gt;

&lt;p&gt;是博弈论的非零和博弈中具代表性的例子，&lt;strong&gt;反映個人最佳選擇並非团体最佳選擇&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;警方逮捕甲、乙两名嫌疑犯，但沒有足够证据指控二人有罪。於是警方分开囚禁嫌疑犯，分别和二人见面，并向雙方提供以下相同的选择：
- 若一人認罪並作证检控對方（相關術語稱「背叛」對方），而對方保持沉默，此人将即時獲释，沉默者将判監10年。
- 若二人都保持沉默（相關術語稱互相「合作」），则二人同樣判监半年。&lt;br&gt;
- 若二人都互相检举（互相「背叛」），則二人同樣判監2年。 
試設想困境中兩名理性囚徒會如何作出選擇：&lt;br&gt;
- 若對方沉默、我背叛會讓我獲釋，所以會選擇背叛。
- 對方背叛指控我，我也要指控對方才能得到較低的刑期，所以也是會選擇背叛。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;二人面對的情況一樣，所以二人的理性思考都会得出相同的结论——选择背叛。
以全体利益而言，如果两个参与者都合作保持沉默，兩人都只會被判刑半年，总体利益更高，結果也比兩人背叛對方、判刑2年的情況較佳。&lt;/p&gt;

&lt;h2&gt;零和博弈&lt;/h2&gt;

&lt;p&gt;零和博弈(英语：Zero-Sum Game)又称零和游戏或零和賽局，与非零和博弈相对，是博弈论的一个概念，属非合作博弈，
指参与博弈的各方，在严格竞争下，一方的收益必然意味着另一方的损失，博弈各方的收益和损失相加总和永远为“零”。&lt;strong&gt;双方不存在合作的可能&lt;/strong&gt;&lt;/p&gt;
</content>
   </entry>
   
   <entry>
     <title>big data and cloud</title>
     <link href="http://blog.yunnuy.com/resources/2012/08/23/big-data-and-cloud.html"/>
     <updated>2012-08-23T23:31:00+08:00</updated>
     <id>http://blog.yunnuy.com/resources/2012/08/23/big-data-and-cloud</id>
     <content type="html">&lt;p&gt;今天公司的town hall是介绍了一些新技术及公司引入的情况。有钱好办事，公司在这方面还是挺投入的。&lt;/p&gt;

&lt;h2&gt;big data&lt;/h2&gt;

&lt;p&gt;首先说的是big data，什么是big data呢（后来发现不少是引用的IBM的）&lt;/p&gt;

&lt;h3&gt;Volume:&lt;/h3&gt;

&lt;p&gt;Enterprises are awash with ever-growing data of all types, easily amassing terabytes—even petabytes—of information.
Turn 12 terabytes of Tweets created each day into improved product sentiment analysis
Convert 350 billion annual meter readings to better predict power consumption&lt;/p&gt;

&lt;h3&gt;Velocity:&lt;/h3&gt;

&lt;p&gt;Sometimes 2 minutes is too late. For time-sensitive processes such as catching fraud, big data must be used as it streams into your enterprise in order to maximize its value.
Scrutinize 5 million trade events created each day to identify potential fraud
Analyze 500 million daily call detail records in real-time to predict customer churn faster&lt;/p&gt;

&lt;h3&gt;Variety:&lt;/h3&gt;

&lt;p&gt;Big data is any type of data - structured and unstructured data such as text, sensor data, audio, video, click streams, log files and more. New insights are found when analyzing these data types together.
Monitor 100’s of live video feeds from surveillance cameras to target points of interest
Exploit the 80% data growth in images, video and documents to improve customer satisfaction&lt;/p&gt;

&lt;h3&gt;Veracity:&lt;/h3&gt;

&lt;p&gt;1 in 3 business leaders don’t trust the information they use to make decisions. How can you act upon information if you don’t trust it? Establishing trust in big data presents a huge challenge as the variety and number of sources grows.&lt;/p&gt;

&lt;p&gt;big data means ‘the art of possible&amp;#39;.我的理解是数据仓库和BI，在非数据库（非关系型数据库）维度的扩展。
举了个很生动的例子：google trend可以让我们不需要调查和研究，就知道哪里发生了什么事。&lt;/p&gt;

&lt;h2&gt;SaaS&lt;/h2&gt;

&lt;p&gt;然后说了下云计算，既SaaS (software as service), 它包括：&lt;br&gt;
IaaS (Infrastructure as a Service)&lt;br&gt;
PaaS (Platform as service)&lt;br&gt;
Maas (Middleware as service)    &lt;/p&gt;

&lt;p&gt;SaaS 将软件和服务融合起来，开辟了一种新的商业模式。这一块我比较了解，可惜大爱的google和amazon在国内都被墙着。。。&lt;/p&gt;
</content>
   </entry>
   
   <entry>
     <title>TYPO.CSS</title>
     <link href="http://blog.yunnuy.com/resources/2012/08/10/typo-css.html"/>
     <updated>2012-08-10T20:55:11+08:00</updated>
     <id>http://blog.yunnuy.com/resources/2012/08/10/typo-css</id>
     <content type="html">&lt;h2 id=&quot;tagline&quot;&gt;一致化浏览器排版效果，构建最适合中文阅读的网页排版&lt;/h2&gt;

&lt;ol id=&quot;table&quot;&gt;
    &lt;li&gt;&lt;a href=&quot;#section1&quot;&gt;关于 TYPO.CSS&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;#section2&quot;&gt;排版实例&lt;/a&gt;
        &lt;ul&gt;
            &lt;li&gt;&lt;a href=&quot;#section2-1&quot;&gt;例1：论语学而篇第一&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;#section2-2&quot;&gt;例2：英文排版&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;#section3&quot;&gt;附录&lt;/a&gt;
        &lt;ol&gt;
            &lt;li&gt;&lt;a href=&quot;#appendix1&quot;&gt;TYPO.CSS 排版偏重点&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;#appendix2&quot;&gt;开源许可&lt;/a&gt;&lt;/li&gt;
        &lt;/ol&gt;
    &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;section1&quot;&gt;一、关于 TYPO.CSS&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;TYPO.CSS&lt;/em&gt; 的目的是，在一致化浏览器排版效果的同时，构建最适合中文阅读的网页排版。&lt;/p&gt;

&lt;h4&gt;现状和如何去做：&lt;/h4&gt;

&lt;p&gt;排版是一个麻烦的问题，需要精心设计，而这个设计却是常被视觉设计师所忽略的。前端工程师更常看到这样的问题，但不便变更。因为在多个 OS 中的不同浏览器渲染不同，改动需要多的时间做回归测试，所以改变变得更困难。而像我们一般使用的 Yahoo、Eric Meyer 和 Alice base.css 中采用的 Reset 都没有很好地考虑中文排版。TYPO.CSS 要做的就是解决中文排版的问题。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;TYPO.CSS 测试于如下平台：&lt;/strong&gt;&lt;/p&gt;

&lt;table summary=&quot;TYPO.CSS 的测试平台列表&quot;&gt;
    &lt;thead&gt;
        &lt;tr&gt;
            &lt;th&gt;OS/浏览器&lt;/th&gt;
            &lt;th&gt;Firefox&lt;/th&gt;
            &lt;th&gt;Chrome&lt;/th&gt;
            &lt;th&gt;Safari&lt;/th&gt;
            &lt;th&gt;Opera&lt;/th&gt;
            &lt;th&gt;IE9&lt;/th&gt;
            &lt;th&gt;IE8&lt;/th&gt;
            &lt;th&gt;IE7&lt;/th&gt;
            &lt;th&gt;IE6&lt;/th&gt;
        &lt;/tr&gt;
    &lt;/thead&gt;
    &lt;tbody&gt;
        &lt;tr&gt;
            &lt;td&gt;Mac OS X&lt;/td&gt;
            &lt;td&gt;√&lt;/td&gt;
            &lt;td&gt;√&lt;/td&gt;
            &lt;td&gt;√&lt;/td&gt;
            &lt;td&gt;√&lt;/td&gt;
            &lt;td&gt;-&lt;/td&gt;
            &lt;td&gt;-&lt;/td&gt;
            &lt;td&gt;-&lt;/td&gt;
            &lt;td&gt;-&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;Windows 7&lt;/td&gt;
            &lt;td&gt;√&lt;/td&gt;
            &lt;td&gt;√&lt;/td&gt;
            &lt;td&gt;√&lt;/td&gt;
            &lt;td&gt;√&lt;/td&gt;
            &lt;td&gt;√&lt;/td&gt;
            &lt;td&gt;√&lt;/td&gt;
            &lt;td&gt;√&lt;/td&gt;
            &lt;td&gt;-&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;Windows XP&lt;/td&gt;
            &lt;td&gt;√&lt;/td&gt;
            &lt;td&gt;√&lt;/td&gt;
            &lt;td&gt;√&lt;/td&gt;
            &lt;td&gt;√&lt;/td&gt;
            &lt;td&gt;-&lt;/td&gt;
            &lt;td&gt;√&lt;/td&gt;
            &lt;td&gt;√&lt;/td&gt;
            &lt;td&gt;√&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;Ubuntu Linux&lt;/td&gt;
            &lt;td&gt;√&lt;/td&gt;
            &lt;td&gt;√&lt;/td&gt;
            &lt;td&gt;-&lt;/td&gt;
            &lt;td&gt;√&lt;/td&gt;
            &lt;td&gt;-&lt;/td&gt;
            &lt;td&gt;-&lt;/td&gt;
            &lt;td&gt;-&lt;/td&gt;
            &lt;td&gt;-&lt;/td&gt;
        &lt;/tr&gt;
    &lt;/tbody&gt;
&lt;/table&gt;

&lt;h4&gt;中文排版的重点和难点&lt;/h4&gt;

&lt;p&gt;在中文排版中，HTML4 的很多标准在语义在都有照顾到。但从视觉效果上，却很难利用单独的 CSS 来实现，像&lt;abbr title=&quot;在文字下多加一个点&quot;&gt;着重号&lt;/abbr&gt;。在 HTML4 中，着重号标签（&lt;code&gt;&amp;lt;u&amp;gt;&lt;/code&gt;）已经被放弃，而 HTML5 被&lt;a href=&quot;http://html5doctor.com/u-element/&quot;&gt;重新提起&lt;/a&gt;。TYPO.CSS 也根据实际情况提供相应的方案。我们重要要注意的两点是：&lt;/p&gt;

&lt;ol&gt;
    &lt;li&gt;语义：语义对应的用法和样式是否与中文排版一致&lt;/li&gt;
    &lt;li&gt;表现：在各浏览器中的字体、大小和缩放是否如排版预期&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;对于这些，TYPO.CSS 排版项目的中文偏重注意点，都添加在附录中，详见：&lt;/p&gt;

&lt;blockquote&gt;
    &lt;b&gt;附录一&lt;/b&gt;：&lt;a href=&quot;#appendix1&quot;&gt;TYPO.CSS 排版偏重点&lt;/a&gt;
&lt;/blockquote&gt;

&lt;p&gt;目前仍处于 alpha 开发阶段，测试平台的覆盖，特别是在&lt;abbr title=&quot;手机、平板电脑等移动平台&quot;&gt;移动端&lt;/abbr&gt;上还没有覆盖完主流平台，希望有能力的同学能加入测试行列，或者加入到 TYPO.CSS 的开发。加入方法：&lt;a href=&quot;https://github.com/sofish/typo.css&quot;&gt;参与 TYPO.CSS 开发&lt;/a&gt;。如有批评、建议和意见，也随时欢迎给在 Github 直接提 &lt;a href=&quot;https://github.com/sofish/typo.css/issues&quot;&gt;issues&lt;/a&gt;，或给&lt;abbr title=&quot;Sofish Lin, author of TYPO.CSS&quot; role=&quot;author&quot;&gt;我&lt;/abbr&gt;发&lt;a href=&quot;mailto:sofish@163.com&quot;&gt;邮件&lt;/a&gt;。&lt;/p&gt;

&lt;h2 id=&quot;section2&quot;&gt;二、排版实例：&lt;/h2&gt;

&lt;p&gt;提供2个排版实例，第一个中文实例来自于来自于&lt;cite class=&quot;typo-unique&quot;&gt;张燕婴&lt;/cite&gt;的《论语》，由于古文排版涉及到的元素比较多，所以采用《论语》中《学而》的第一篇作为排版实例介绍；第2个来自到经典的 Lorem Ipsum，并加入了一些代码和列表等比较具有代表性的排版元素。&lt;/p&gt;

&lt;h3 id=&quot;section2-1&quot;&gt;例1：论语学而篇第一&lt;/h3&gt;

&lt;p&gt;&lt;small&gt;&lt;b&gt;作者：&lt;/b&gt;&lt;abbr title=&quot;名丘，字仲尼&quot;&gt;孔子&lt;/abbr&gt;（&lt;time&gt;前551年9月28日－前479年4月11日&lt;/time&gt;）&lt;/small&gt;&lt;/p&gt;

&lt;h4&gt;本篇引语&lt;/h4&gt;

&lt;p&gt;《学而》是《论语》第一篇的篇名。《论语》中各篇一般都是以第一章的前二三个字作为该篇的篇名。《学而》一篇包括16章，内容涉及诸多方面。其中重点是“吾日三省吾身”；“节用而爱人，使民以时”；“礼之用，和为贵”以及仁、孝、信等道德范畴。 &lt;/p&gt;

&lt;h4&gt;原文&lt;/h4&gt;

&lt;p&gt;子曰&lt;sup&gt;&lt;a href=&quot;#note1&quot;&gt;[1]&lt;/a&gt;&lt;/sup&gt;：“学&lt;sup&gt;&lt;a href=&quot;#note2&quot;&gt;[2]&lt;/a&gt;&lt;/sup&gt;而时习&lt;sup&gt;&lt;a href=&quot;#note3&quot;&gt;[3]&lt;/a&gt;&lt;/sup&gt;之，不亦说&lt;sup&gt;&lt;a href=&quot;#note4&quot;&gt;[4]&lt;/a&gt;&lt;/sup&gt;乎？有朋&lt;sup&gt;&lt;a href=&quot;#note5&quot;&gt;[5]&lt;/a&gt;&lt;/sup&gt;自远方来，不亦乐&lt;sup&gt;&lt;a href=&quot;#note6&quot;&gt;[6]&lt;/a&gt;&lt;/sup&gt;乎？人不知&lt;sup&gt;&lt;a href=&quot;#note7&quot;&gt;[7]&lt;/a&gt;&lt;/sup&gt;，而不愠&lt;sup&gt;&lt;a href=&quot;#note8&quot;&gt;[8]&lt;/a&gt;&lt;/sup&gt;，不亦君子&lt;sup&gt;&lt;a href=&quot;#note9&quot;&gt;[9]&lt;/a&gt;&lt;/sup&gt;乎？” &lt;/p&gt;

&lt;h4&gt;注释&lt;/h4&gt;

&lt;p&gt;
&lt;small&gt;
&lt;span id=&quot;note1&quot;&gt;[1]&lt;/span&gt; 子：中国古代对于有地位、有学问的男子的尊称，有时也泛称男子。《论语》书中“子曰”的子，都是指孔子而言。&lt;br /&gt;
&lt;span id=&quot;note2&quot;&gt;[2]&lt;/span&gt; 学：孔子在这里所讲的“学”，主要是指学习西周的礼、乐、诗、书等传统文化典籍。 &lt;br /&gt;
&lt;span id=&quot;note3&quot;&gt;[3]&lt;/span&gt; 时习：在周秦时代，“时”字用作副词，意为“在一定的时候”或者“在适当的时候”。但朱熹在《论语集注》一书中把“时”解释为“时常”。“习”，指演习礼、乐；复习诗、书。也含有温习、实习、练习的意思。 &lt;br /&gt;
&lt;span id=&quot;note4&quot;&gt;[4]&lt;/span&gt; 说：音ｙｕè，同悦，愉快、高兴的意思。 &lt;br /&gt;
&lt;span id=&quot;note5&quot;&gt;[5]&lt;/span&gt; 有朋：一本作“友朋”。旧注说，“同门曰朋”，即同在一位老师门下学习的叫朋，也就是志同道合的人。 &lt;br /&gt;
&lt;span id=&quot;note6&quot;&gt;[6]&lt;/span&gt; 乐：与说有所区别。旧注说，悦在内心，乐则见于外。 &lt;br /&gt;
&lt;span id=&quot;note7&quot;&gt;[7]&lt;/span&gt; 人不知：此句不完整，没有说出人不知道什么。缺少宾语。一般而言，知，是了解的意思。人不知，是说别人不了解自己。 &lt;br /&gt;
&lt;span id=&quot;note8&quot;&gt;[8]&lt;/span&gt; 愠：音ｙùｎ，恼怒，怨恨。 &lt;br /&gt;
&lt;span id=&quot;note9&quot;&gt;[9]&lt;/span&gt; 君子：《论语》书中的君子，有时指有德者，有时指有位者。此处指孔子理想中具有高尚人格的人。
&lt;/small&gt;
&lt;/p&gt;

&lt;h4&gt;译文&lt;/h4&gt;

&lt;p&gt;孔子说：“学了又时常温习和练习，不是很愉快吗？有志同道合的人从远方来，不是很令人高兴的吗？人家不了解我，我也不怨恨、恼怒，不也是一个有德的君子吗？” &lt;/p&gt;

&lt;h4&gt;评析&lt;/h4&gt;

&lt;p&gt;宋代著名学者&lt;u class=&quot;typo-u&quot;&gt;朱熹&lt;/u&gt;对此章评价极高，说它是“入道之门，积德之基”。本章这三句话是人们非常熟悉的。历来的解释都是：学了以后，又时常温习和练习，不也高兴吗等等。三句话，一句一个意思，前后句子也没有什么连贯性。但也有人认为这样解释不符合原义，指出这里的“学”不是指学习，而是指学说或主张；“时”不能解为时常，而是时代或社会的意思，“习”不是温习，而是使用，引申为采用。而且，这三句话不是孤立的，而是前后相互连贯的。这三句的意思是：自己的学说，要是被社会采用了，那就太高兴了；退一步说，要是没有被社会所采用，可是很多朋友赞同&lt;abbr title=&quot;张燕婴&quot;&gt;我&lt;/abbr&gt;的学说，纷纷到我这里来讨论问题，我也感到快乐；再退一步说，即使社会不采用，人们也不理解我，我也不怨恨，这样做，不也就是君子吗？（见《齐鲁学刊》1986年第6期文）这种解释可以自圆其说，而且也有一定的道理，供读者在理解本章内容时参考。&lt;/p&gt;

&lt;p&gt;此外，在对“人不知，而不愠”一句的解释中，也有人认为，“人不知”的后面没有宾语，人家不知道什么呢？当时因为孔子有说话的特定环境，他不需要说出知道什么，别人就可以理解了，却给后人留下一个谜。有人说，这一句是接上一句说的，从远方来的朋友向我求教，我告诉他，他还不懂，我却不怨恨。这样，“人不知”就是“人家不知道我所讲述的”了。这样的解释似乎有些牵强。&lt;/p&gt;

&lt;p&gt;总之，本章提出以学习为乐事，做到人不知而不愠，反映出孔子学而不厌、诲人不倦、注重修养、严格要求自己的主张。这些思想主张在《论语》书中多处可见，有助于对第一章内容的深入了解。&lt;/p&gt;

&lt;h3 id=&quot;section2-2&quot;&gt;例2：英文排版&lt;/h3&gt;

&lt;p&gt;Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry&#39;s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.&lt;/p&gt;

&lt;blockquote&gt;
    Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.
&lt;/blockquote&gt;

&lt;h4&gt;The standard Lorem Ipsum passage, used since the 1500s&lt;/h4&gt;

&lt;p&gt;&quot;Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.&quot;&lt;/p&gt;

&lt;h4&gt;Section 1.10.32 of &quot;de Finibus Bonorum et Malorum&quot;, written by Cicero in 45 BC&lt;/h4&gt;

&lt;p&gt;&quot;Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit, sed quia non numquam eius modi tempora incidunt ut labore et dolore magnam aliquam quaerat voluptatem. Ut enim ad minima veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur? Quis autem vel eum iure reprehenderit qui in ea voluptate velit esse quam nihil molestiae consequatur, vel illum qui dolorem eum fugiat quo voluptas nulla pariatur?&quot;&lt;/p&gt;

&lt;h4&gt;List style in action&lt;/h4&gt;

&lt;ul&gt;
    &lt;li&gt;If you wish to succeed, you should use persistence as your good friend, experience as your reference, prudence as your brother and hope as your sentry.
        &lt;p&gt;如果你希望成功，当以恒心为良友，以经验为参谋，以谨慎为兄弟，以希望为哨兵。&lt;/p&gt;
    &lt;/li&gt;
    &lt;li&gt;Sometimes one pays most for the things one gets for nothing.
        &lt;p&gt;有时候一个人为不花钱得到的东西付出的代价最高。&lt;/p&gt;
    &lt;/li&gt;
    &lt;li&gt;Only those who have the patience to do simple things perfectly ever acquire the skill to do difficult things easily.
        &lt;p&gt;只有有耐心圆满完成简单工作的人，才能够轻而易举的完成困难的事。&lt;/p&gt;
    &lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;You may want to create a perfect &lt;code&gt;&amp;lt;hr /&amp;gt;&lt;/code&gt; line, despite the fact that there will never have one&lt;/h4&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;abbr title=&quot;法国作家罗切福考尔德&quot;&gt;La Racheforcauld&lt;/abbr&gt; said: &lt;mark&gt;&quot;Few things are impossible in themselves; and it is often for want of will, rather than of means, that man fails to succeed&quot;.&lt;/mark&gt; You just need to follow the browser&#39;s behavior, and set a right &lt;code&gt;margin&lt;/code&gt; to it。it will works nice as the demo you&#39;re watching now. The following code is the best way to render typo in Chinese:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;&lt;span class=&quot;c&quot;&gt;/* 标题应该更贴紧内容，并与其他块区分，margin 值要相应做优化 */&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;h2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;h3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;h4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;h5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;h6&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;line-height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;font-family&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Arial&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;sans-serif&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1.4em&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0.8em&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;font-size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1.8em&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;}&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;h2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;font-size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1.6em&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;}&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;h3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;font-size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1.4em&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;}&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;h4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;font-size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1.2em&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;}&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;h5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;h6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;font-size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1em&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;}&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;/* 现代排版：保证块/段落之间的空白隔行 */&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.typo&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;.typo&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;pre&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;.typo&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;ul&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;.typo&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;ol&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;.typo&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;dl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;.typo&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;form&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;.typo&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;hr&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1em&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0.6em&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;section3&quot;&gt;三、附录&lt;/h3&gt;

&lt;h5 id=&quot;appendix1&quot;&gt;1、TYPO.CSS 排版偏重点&lt;/h5&gt;

&lt;table summary=&quot;TYPO.CSS 排版偏重点&quot;&gt;
    &lt;thead&gt;
        &lt;tr&gt;
            &lt;th&gt;类型&lt;/th&gt;
            &lt;th&gt;语义&lt;/th&gt;
            &lt;th&gt;标签&lt;/th&gt;
            &lt;th&gt;注意点&lt;/th&gt;
        &lt;/tr&gt;
    &lt;/thead&gt;
    &lt;tbody&gt;
        &lt;tr&gt;
          &lt;th rowspan=&quot;15&quot;&gt;基础标签&lt;/th&gt;
          &lt;td&gt;标题&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;h1&lt;/code&gt; ～ &lt;code&gt;h6&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;全局不强制大小，&lt;code&gt;.typo&lt;/code&gt; 中标题与其对应的内容应紧贴，并且有相应的大小设置&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td&gt;上、下标&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;sup&lt;/code&gt;/&lt;code&gt;sub&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;保持与 MicroSoft Office Word 等程序的日常排版一致&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td&gt;引用&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;blockquote&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;显示/嵌套样式&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td&gt;缩写&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;abbr&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;是否都有下划线，鼠标 &lt;code&gt;hover&lt;/code&gt; 是否为帮助手势&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td&gt;分割线&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;hr&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;显示的 &lt;code&gt;padding&lt;/code&gt; 和 &lt;code&gt;margin&lt;/code&gt;正确&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td&gt;列表&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;ul&lt;/code&gt;/&lt;code&gt;ol&lt;/code&gt;/&lt;code&gt;dl&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;在全局没有 &lt;code&gt;list-style&lt;/code&gt;，在 .&lt;code&gt;typo&lt;/code&gt; 中对齐正确&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td&gt;定义列表&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;dl&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;全局 &lt;code&gt;padding&lt;/code&gt; 和 &lt;code&gt;margin&lt;/code&gt;为0， .&lt;code&gt;typo&lt;/code&gt; 中对齐正确&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td&gt;选项&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;input[type=radio[, checkbox]]&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;与其他 &lt;code&gt;form&lt;/code&gt; 元素排版时是否居中&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td&gt;斜体&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;i&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;只设置一种斜体，让 &lt;code&gt;em&lt;/code&gt; 和  &lt;code&gt;cite&lt;/code&gt; 显示为正体&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td&gt;强调&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;em&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;在全局显示正体，在 &lt;code&gt;.typo&lt;/code&gt; 中显示与 &lt;code&gt;b&lt;/code&gt; 和 &lt;code&gt;strong&lt;/code&gt; 的样式一致，为粗休&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td&gt;加强&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;strong/b&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;显示为粗体&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td&gt;标记&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;mark&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;类似荧光笔&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td&gt;印刷&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;small&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;保持为正确字体的 80% 大小，颜色设置为浅灰色&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td&gt;表格&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;table&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;全局不显示线条，在 &lt;code&gt;table&lt;/code&gt; 中显示表格外框，并且表头有浅灰背景&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;代码&lt;/td&gt;
            &lt;td&gt;&lt;code&gt;pre&lt;/code&gt;/&lt;code&gt;code&lt;/code&gt;&lt;/td&gt;
            &lt;td&gt;字体使用 &lt;code&gt;courier&lt;/code&gt; 系字体，保持与 &lt;code&gt;serif&lt;/code&gt; 有比较一致的显示效果&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;th rowspan=&quot;5&quot;&gt;特殊符号&lt;/th&gt;
          &lt;td&gt;着重号&lt;/td&gt;
          &lt;td&gt;在文字下加点（•）&lt;/td&gt;
          &lt;td&gt;在支持 &lt;code&gt;:after&lt;/code&gt; 和 &lt;code&gt;:before&lt;/code&gt; 的浏览器可以做渐进增强实现&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td&gt;专名号&lt;/td&gt;
          &lt;td&gt;&lt;u&gt;林建锋&lt;/u&gt;&lt;/td&gt;
          &lt;td&gt;专名号，有下划线，使用 &lt;code&gt;u&lt;/code&gt; 或都 &lt;code&gt;.typo-u&lt;/code&gt; 类&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td&gt;破折号&lt;/td&gt;
          &lt;td&gt;——&lt;/td&gt;
          &lt;td&gt;保持一划，而非两划&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td&gt;人民币&lt;/td&gt;
          &lt;td&gt;&amp;yen;&lt;/td&gt;
          &lt;td&gt;使用两平等线的符号，或者 HTML 实体符号 &lt;code&gt;&amp;amp;yen;&lt;/code&gt;&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td&gt;删除符&lt;/td&gt;
          &lt;td&gt;&lt;del&gt;已删除（deleted）&lt;/del&gt;&lt;/td&gt;
          &lt;td&gt;一致化各浏览器显示，中英混排正确&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;th rowspan=&quot;4&quot;&gt;加强类&lt;/th&gt;
          &lt;td&gt;专名号&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;.typo-u&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;由于 &lt;code&gt;u&lt;/code&gt; 被 HTML4 放弃，在向后兼容上推荐使用 &lt;code&gt;&lt;u type=&quot;typo-u&quot; …&lt;/code&gt;&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td&gt;着重符&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;.typo-em&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;利用 &lt;code&gt;:after&lt;/code&gt; 和 &lt;code&gt;:before&lt;/code&gt; 实现着重符&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td&gt;首字下沉&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;.typo-first&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;特殊排版&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;清除浮动&lt;/td&gt;
            &lt;td&gt;&lt;code&gt;.clearfix&lt;/code&gt;&lt;/td&gt;
            &lt;td&gt;与一般 CSS Reset 保持一对致 API&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;th rowspan=&quot;5&quot;&gt;注意点&lt;/th&gt;
          &lt;td colspan=&quot;3&quot;&gt;（1）中英文混排行高/行距&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td colspan=&quot;3&quot;&gt;（2）上下标在 IE 中显示效果&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td colspan=&quot;3&quot;&gt;（3）块/段落分割空白是否符合设计原则&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td colspan=&quot;3&quot;&gt;（4）input 多余空间问题&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td colspan=&quot;3&quot;&gt;（5）默认字体色彩，目前采用 &lt;code&gt;#333&lt;/code&gt; 在各种浏览显示比较好&lt;/td&gt;
        &lt;/tr&gt;
    &lt;/tbody&gt;
&lt;/table&gt;

&lt;h5 id=&quot;appendix2&quot;&gt;2、开源许可&lt;/h5&gt;

&lt;p&gt;TYPO.CSS 基于 &lt;a href=&quot;http://zh.wikipedia.org/wiki/MIT_License&quot;&gt;MIT License&lt;/a&gt; 开源，使用代码只需说明来源，或者引用 &lt;a href=&quot;http://typo.sofish.de/license.txt&quot;&gt;license.txt&lt;/a&gt; 即可。&lt;/p&gt;
</content>
   </entry>
   
   <entry>
     <title>云存储</title>
     <link href="http://blog.yunnuy.com/resources/2012/08/04/a-few-words-about-cloud-storage.html"/>
     <updated>2012-08-04T15:33:00+08:00</updated>
     <id>http://blog.yunnuy.com/resources/2012/08/04/a-few-words-about-cloud-storage</id>
     <content type="html">&lt;p&gt;写博客有时想放一些图片，就想到了云储存。平常也关注了下，但没认真考察过。
首先说一下访问云的方式，从严格到开放的顺序：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;需要登录他们的网站或者客户端，才能使用。既没有任何API。&lt;/li&gt;
&lt;li&gt;有特定API，且是需要验证。如php，ios等。&lt;/li&gt;
&lt;li&gt;有通用API，如json，uri等，但是会跳转到他们的网站。（外链 - Direct link:download)&lt;/li&gt;
&lt;li&gt;通过url直接访问。（直链 - Direct link:streaming)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;然后看一下收费，基本都是这种存储 + 流量 分开付费的方式。&lt;/p&gt;

&lt;p&gt;然后我们看看一些云存储服务商。 &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;先说互联网老大，google storage,支持1，2，3种访问方式，到2012年底前，以下免费：
&lt;code&gt;
5 GB of storage
25 GB of download data (20 GB to Americas and EMEA*; 5 GB to Asia-Pacific)
25 GB of upload data (20 GB to Americas and EMEA*; 5 GB to Asia-Pacific)
30,000 GET, HEAD requests
3,000 PUT, POST, GET bucket, GET service requests
&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;opendrive *
5G的免费存储，支持1，2，3种访问方式，通过交换链接，可以支持第4种访问方式加少量流量。
适合写博客的我。&lt;a href=&quot;http://www.opendrive.com&quot; title=&quot;OpenDrive - Online storage, backup and file management&quot;&gt;OpenDrive&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;华为dbank
提供较高性价比的直链服务。0.48/g，比google和有拍都便宜。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;有拍
支持1，2，3，4种访问方式，无免费配额。听说服务稳定，价格适中。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;盛大云
支持1，2，无免费版，仿亚马逊的，现在提够很多云服务。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;金山快盘 *
注册送5G，支持1，2，3种访问方式。免费使用。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;skydrive *
之前是25G，现在注册只有5G了。支持1，2，3种访问方式。有免费配额。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;dropbox
和skydrive类似。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ubuntu one *
我用ubuntu，所以也用上了这个。5G免费配额。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;amazon s3
知道它是老大，可惜一直被墙，无缘使用。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;*表示已经试用。&lt;/p&gt;

&lt;hr&gt;
</content>
   </entry>
   
   <entry>
     <title>create logo with inkscape</title>
     <link href="http://blog.yunnuy.com/tools/2012/08/04/create-logo-with-inkscape.html"/>
     <updated>2012-08-04T12:25:00+08:00</updated>
     <id>http://blog.yunnuy.com/tools/2012/08/04/create-logo-with-inkscape</id>
     <content type="html">&lt;p&gt;最近想为我的域名www.yunnuy.com做一个小logo，于是到网上找了个画矢量图的工具。由于我用的unbutu，在软件中心
矢量类排名第一的就是inkscape了，所以下载了下来，看了点资料，开始动手。&lt;/p&gt;

&lt;p&gt;灵感来源与google play中的一些图标，总体思路是方块中放一些文字。 &lt;/p&gt;

&lt;p&gt;1.首先建立一个rectangle，调整他的fill(即中间填充部分)及stroke(即边框)。我调粗了stroke，并改为圆角。&lt;/p&gt;

&lt;p&gt;2.文字部分我打算用一个灵动一些的Y加两个规矩的un，这样不至于单调。不用找艺术字，用brush工具，画出一个Y出来，我画了3笔(3个object)，这样有泼墨的感觉，然后group起来，变成一个object。&lt;/p&gt;

&lt;p&gt;3.输入un，选择字体，字号和颜色。这时最大字体也达不到我的要求，我就把un做group操作，之后就可以像个普通对象那样缩放了。 &lt;/p&gt;

&lt;p&gt;4.将y un调整位置，并group。&lt;/p&gt;

&lt;p&gt;5.现在有2个object了，一个是框，另一个是3个字yun。我需要把3个字放进框里，我试验了之间拖进去，这样的效果好像是在框里面写两个字，颜色会改变。我想到了layer。我将字移动到另一个layer，然后移动到框中。最后group起来。 &lt;/p&gt;

&lt;p&gt;6.基本形态还不错，但是显得有点单调。再给它加个类似阴影的衬拖。类似第1步，建一个square，调整fill和stroke，然后放在layer2，并移到我图形的右下角落。 &lt;/p&gt;

&lt;p&gt;这样我的第一个log就建好了。学了2个小时左右吧，肯定不是最好的实现方式，但基本也满足我个性化logo的需求了。感谢开源，给我们带来这样便利的工具。&lt;/p&gt;
</content>
   </entry>
   
   <entry>
     <title>ubuntu 12.04 创建启动器</title>
     <link href="http://blog.yunnuy.com/linux/2012/07/14/ubuntu-12-dot-04-chuang-jian-qi-dong-qi.html"/>
     <updated>2012-07-14T01:03:00+08:00</updated>
     <id>http://blog.yunnuy.com/linux/2012/07/14/ubuntu-12-dot-04-chuang-jian-qi-dong-qi</id>
     <content type="html">&lt;p&gt;最近又想折腾下android，所有在ubuntu下弄了下开发环境。
值得一提的是，ubuntu下如果你要在命令行里能使用你的
命令，你需要将可执行文件路径加进&lt;code&gt;$PATH&lt;/code&gt;, 那如果你想在
桌面启动一个应用程序，怎么办呢？&lt;/p&gt;

&lt;p&gt;很简单，看我添加&lt;code&gt;eclipse&lt;/code&gt;的例子：
先添加一个文件&lt;code&gt;/usr/share/applications/eclipse.desktop&lt;/code&gt;
内容类似如下:
&lt;code&gt;
[Desktop Entry]
Version=1.0
Name=eclipse
Exec=/home/ming/applications/eclipse/eclipse
Terminal=false
Icon=/home/ming/applications/eclipse/icon.xpm
Type=Application
Categories=Development
&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;my development enviroment&lt;/h2&gt;

&lt;h2&gt;java Develop Kit 1.7  &lt;/h2&gt;

&lt;p&gt;installed in &lt;code&gt;/usr/lib/jvm/jdk1.7.0_05&lt;/code&gt;, configred in &lt;code&gt;.bashrc&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;eclipse 4.2 &lt;/h2&gt;

&lt;p&gt;installed in  &lt;code&gt;/home/ming/applications/eclipse&lt;/code&gt;,
added a luncher to &lt;code&gt;/usr/share/applications/eclipse.desktop&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;android SDK &lt;/h2&gt;

&lt;p&gt;/home/ming/applications&lt;/p&gt;
</content>
   </entry>
   
   <entry>
     <title>my first gem</title>
     <link href="http://blog.yunnuy.com/ruby/2012/07/11/my-first-gem.html"/>
     <updated>2012-07-11T23:11:00+08:00</updated>
     <id>http://blog.yunnuy.com/ruby/2012/07/11/my-first-gem</id>
     <content type="html">&lt;p&gt;学了大半年的rails，却还没写过自己到gem，我这个吉他新手，还老需要去翻教材，找一些和弦是如何按的，
于是我决定写一个简单的gem，用来查找这些和弦。思路：  &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; 将常用和弦以yaml的形式存到文件中&lt;br&gt;&lt;/li&gt;
&lt;li&gt; 设计一个简单的和弦类，它的&lt;code&gt;to_s&lt;/code&gt;方法显示改和弦，像这样
```
am
|--0--|-----|-----|-----|-----|
|-----|--1--|-----|-----|-----|
|-----|-----|--3--|-----|-----|
|-----|-----|--2--|-----|-----|
|--0--|-----|-----|-----|-----|
|--0--|-----|-----|-----|-----|&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt; 3.  用rake显示多个或指定和弦

我们可以用bundle来新建一个gem，他会替我们生成一个骨架`bundle gem guitar_chords`.  
我的gem是下面这个样子
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;$ tree
.
├── Gemfile
├── Gemfile.lock
├── guitar&lt;em&gt;chords.gemspec
├── lib
│   ├── guitar&lt;/em&gt;chords
│   │   ├── guitar&lt;em&gt;chord.rb
│   │   ├── guitar&lt;/em&gt;chords.yml
│   │   └── version.rb
│   └── guitar&lt;em&gt;chords.rb
├── LICENSE
├── Rakefile
├── README.md
└── spec
    ├── guitar&lt;/em&gt;chords&lt;em&gt;spec.rb
    └── spec&lt;/em&gt;helper.rb
``&lt;code&gt;
我尝试用SPEC进行TDD，虽然才写了几个test case，却也能在重构时帮我快速找出不少问题。  
配置spec时，碰到一些依赖方面的问题，对于module，require之后才能include。然后路径
的问题，特别是相对路径，如果你在&lt;/code&gt;guitar&lt;em&gt;chord.rb&lt;code&gt;中写&lt;/code&gt;guitar&lt;/em&gt;chords/guitar&lt;em&gt;chords.yml&lt;code&gt;的
话，不一定能找到，因为当前目录是你调用&lt;/code&gt;spec&lt;code&gt;时所在的目录，并不是&lt;/code&gt;guitar&lt;/em&gt;chord.rb`的目录。
然后慢慢去翻书，找别人的代码参考，终于实现了个大概。&lt;/p&gt;

&lt;p&gt;TODO：&lt;br&gt;
 1. rake部分&lt;br&gt;
 2. 用单例模式，在第一次加载&lt;code&gt;guitar_chords.rb&lt;/code&gt;时load所有的和弦对象。&lt;br&gt;
你可以查看源码，见&lt;a href=&quot;https://github.com/feitian124/guitar_chords&quot;&gt;这里&lt;/a&gt;&lt;/p&gt;
</content>
   </entry>
   

</feed>
