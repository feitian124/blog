<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Ming]]></title>
  <link href="http://feitian124.github.com/atom.xml" rel="self"/>
  <link href="http://feitian124.github.com/"/>
  <updated>2012-08-23T23:59:51+08:00</updated>
  <id>http://feitian124.github.com/</id>
  <author>
    <name><![CDATA[ming]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[big data and cloud]]></title>
    <link href="http://feitian124.github.com/blog/2012/08/big-data-and-cloud.html"/>
    <updated>2012-08-23T23:31:00+08:00</updated>
    <id>http://feitian124.github.com/blog/2012/08/big-data-and-cloud</id>
    <content type="html"><![CDATA[<p>今天公司的town hall是介绍了一些新技术及公司引入的情况。有钱好办事，公司在这方面还是挺投入的。
 <!-- more --></p>

<h2>big data</h2>

<p>首先说的是big data，什么是big data呢（后来发现不少是引用的IBM的）</p>

<h3>Volume:</h3>

<p>Enterprises are awash with ever-growing data of all types, easily amassing terabytes—even petabytes—of information.
Turn 12 terabytes of Tweets created each day into improved product sentiment analysis
Convert 350 billion annual meter readings to better predict power consumption</p>

<h3>Velocity:</h3>

<p>Sometimes 2 minutes is too late. For time-sensitive processes such as catching fraud, big data must be used as it streams into your enterprise in order to maximize its value.
Scrutinize 5 million trade events created each day to identify potential fraud
Analyze 500 million daily call detail records in real-time to predict customer churn faster</p>

<h3>Variety:</h3>

<p>Big data is any type of data - structured and unstructured data such as text, sensor data, audio, video, click streams, log files and more. New insights are found when analyzing these data types together.
Monitor 100’s of live video feeds from surveillance cameras to target points of interest
Exploit the 80% data growth in images, video and documents to improve customer satisfaction</p>

<h3>Veracity:</h3>

<p>1 in 3 business leaders don’t trust the information they use to make decisions. How can you act upon information if you don’t trust it? Establishing trust in big data presents a huge challenge as the variety and number of sources grows.</p>

<p>big data means ‘the art of possible&#8217;.我的理解是数据仓库和BI，在非数据库（非关系型数据库）维度的扩展。
举了个很生动的例子：google trend可以让我们不需要调查和研究，就知道哪里发生了什么事。</p>

<h2>SaaS</h2>

<p>然后说了下云计算，既SaaS (software as service), 它包括：<br/>
IaaS (Infrastructure as a Service)<br/>
PaaS (Platform as service)<br/>
Maas (Middleware as service)</p>

<p>SaaS 将软件和服务融合起来，开辟了一种新的商业模式。这一块我比较了解，可惜大爱的google和amazon在国内都被墙着。。。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[云存储]]></title>
    <link href="http://feitian124.github.com/blog/2012/08/a-few-words-about-cloud-storage.html"/>
    <updated>2012-08-04T15:33:00+08:00</updated>
    <id>http://feitian124.github.com/blog/2012/08/a-few-words-about-cloud-storage</id>
    <content type="html"><![CDATA[<p>写博客有时想放一些图片，就想到了云储存。平常也关注了下，但没认真考察过。
首先说一下访问云的方式，从严格到开放的顺序：
 <!-- more -->
1. 需要登录他们的网站或者客户端，才能使用。既没有任何API。
2. 有特定API，且是需要验证。如php，ios等。
3. 有通用API，如json，uri等，但是会跳转到他们的网站。（外链 - Direct link:download)
4. 通过url直接访问。（直链 - Direct link:streaming)</p>

<p>然后看一下收费，基本都是这种存储 + 流量 分开付费的方式。</p>

<p>然后我们看看一些云存储服务商。</p>

<ol>
<li>先说互联网老大，google storage,支持1，2，3种访问方式，到2012年底前，以下免费：</li>
</ol>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>5 GB of storage
</span><span class='line'>25 GB of download data (20 GB to Americas and EMEA*; 5 GB to Asia-Pacific)
</span><span class='line'>25 GB of upload data (20 GB to Americas and EMEA*; 5 GB to Asia-Pacific)
</span><span class='line'>30,000 GET, HEAD requests
</span><span class='line'>3,000 PUT, POST, GET bucket, GET service requests</span></code></pre></td></tr></table></div></figure>


<ol>
<li><p>opendrive *
5G的免费存储，支持1，2，3种访问方式，通过交换链接，可以支持第4种访问方式加少量流量。
适合写博客的我。<a href="http://www.opendrive.com" title="OpenDrive - Online storage, backup and file management">OpenDrive</a></p></li>
<li><p>华为dbank
提供较高性价比的直链服务。0.48/g，比google和有拍都便宜。</p></li>
<li><p>有拍
支持1，2，3，4种访问方式，无免费配额。听说服务稳定，价格适中。</p></li>
<li>盛大云
支持1，2，无免费版，仿亚马逊的，现在提够很多云服务。</li>
<li>金山快盘 *
注册送5G，支持1，2，3种访问方式。免费使用。</li>
<li>skydrive *
之前是25G，现在注册只有5G了。支持1，2，3种访问方式。有免费配额。</li>
<li>dropbox
和skydrive类似。</li>
<li>ubuntu one *
我用ubuntu，所以也用上了这个。5G免费配额。</li>
<li>amazon s3
知道它是老大，可惜一直被墙，无缘使用。</li>
</ol>


<p>   *表示已经试用。</p>

<hr />
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[create logo with inkscape]]></title>
    <link href="http://feitian124.github.com/blog/2012/08/create-logo-with-inkscape.html"/>
    <updated>2012-08-04T12:25:00+08:00</updated>
    <id>http://feitian124.github.com/blog/2012/08/create-logo-with-inkscape</id>
    <content type="html"><![CDATA[<p>   最近想为我的域名www.yunnuy.com做一个小logo，于是到网上找了个画矢量图的工具。由于我用的unbutu，在软件中心
矢量类排名第一的就是inkscape了，所以下载了下来，看了点资料，开始动手。
 <!-- more -->
   灵感来源与google play中的一些图标，总体思路是方块中放一些文字。</p>

<p> 1.首先建立一个rectangle，调整他的fill(即中间填充部分)及stroke(即边框)。我调粗了stroke，并改为圆角。</p>

<p> 2.文字部分我打算用一个灵动一些的Y加两个规矩的un，这样不至于单调。不用找艺术字，用brush工具，画出一个Y出来，我画了3笔(3个object)，这样有泼墨的感觉，然后group起来，变成一个object。</p>

<p> 3.输入un，选择字体，字号和颜色。这时最大字体也达不到我的要求，我就把un做group操作，之后就可以像个普通对象那样缩放了。</p>

<p> 4.将y un调整位置，并group。
<img class="right" src="https://www.opendrive.com/files/OV8yMjAwMTIyX25OekJO/yunnuy.png" width="200" title="yunnuy" ></p>

<p> 5.现在有2个object了，一个是框，另一个是3个字yun。我需要把3个字放进框里，我试验了之间拖进去，这样的效果好像是在框里面写两个字，颜色会改变。我想到了layer。我将字移动到另一个layer，然后移动到框中。最后group起来。</p>

<p> 6.基本形态还不错，但是显得有点单调。再给它加个类似阴影的衬拖。类似第1步，建一个square，调整fill和stroke，然后放在layer2，并移到我图形的右下角落。</p>

<p> 这样我的第一个log就建好了。学了2个小时左右吧，肯定不是最好的实现方式，但基本也满足我个性化logo的需求了。感谢开源，给我们带来这样便利的工具。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ubuntu 12.04 创建启动器]]></title>
    <link href="http://feitian124.github.com/blog/2012/07/ubuntu-12-dot-04-chuang-jian-qi-dong-qi.html"/>
    <updated>2012-07-14T01:03:00+08:00</updated>
    <id>http://feitian124.github.com/blog/2012/07/ubuntu-12-dot-04-chuang-jian-qi-dong-qi</id>
    <content type="html"><![CDATA[<p>最近又想折腾下android，所有在ubuntu下弄了下开发环境。
值得一提的是，ubuntu下如果你要在命令行里能使用你的
命令，你需要将可执行文件路径加进<code>$PATH</code>, 那如果你想在
桌面启动一个应用程序，怎么办呢？</p>

<!-- more -->


<p>很简单，看我添加<code>eclipse</code>的例子：
先添加一个文件<code>/usr/share/applications/eclipse.desktop</code>
内容类似如下:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[Desktop Entry]
</span><span class='line'>Version=1.0
</span><span class='line'>Name=eclipse
</span><span class='line'>Exec=/home/ming/applications/eclipse/eclipse
</span><span class='line'>Terminal=false
</span><span class='line'>Icon=/home/ming/applications/eclipse/icon.xpm
</span><span class='line'>Type=Application
</span><span class='line'>Categories=Development</span></code></pre></td></tr></table></div></figure>


<h2>my development enviroment</h2>

<h2>java Develop Kit 1.7  </h2>

<p>installed in <code>/usr/lib/jvm/jdk1.7.0_05</code>, configred in <code>.bashrc</code></p>

<h2>eclipse 4.2 </h2>

<p>installed in  <code>/home/ming/applications/eclipse</code>,
added a luncher to <code>/usr/share/applications/eclipse.desktop</code></p>

<h2>android SDK </h2>

<p>/home/ming/applications</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[my first gem]]></title>
    <link href="http://feitian124.github.com/blog/2012/07/my-first-gem.html"/>
    <updated>2012-07-11T23:11:00+08:00</updated>
    <id>http://feitian124.github.com/blog/2012/07/my-first-gem</id>
    <content type="html"><![CDATA[<p>学了大半年的rails，却还没写过自己到gem，我这个吉他新手，还老需要去翻教材，找一些和弦是如何按的，
于是我决定写一个简单的gem，用来查找这些和弦。思路：</p>

<!-- more -->


<ol>
<li>将常用和弦以yaml的形式存到文件中</li>
<li>设计一个简单的和弦类，它的<code>to_s</code>方法显示改和弦，像这样</li>
</ol>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>am
</span><span class='line'>|--0--|-----|-----|-----|-----|
</span><span class='line'>|-----|--1--|-----|-----|-----|
</span><span class='line'>|-----|-----|--3--|-----|-----|
</span><span class='line'>|-----|-----|--2--|-----|-----|
</span><span class='line'>|--0--|-----|-----|-----|-----|
</span><span class='line'>|--0--|-----|-----|-----|-----|
</span></code></pre></td></tr></table></div></figure>


<ol>
<li>用rake显示多个或指定和弦</li>
</ol>


<p>我们可以用bundle来新建一个gem，他会替我们生成一个骨架<code>bundle gem guitar_chords</code>.<br/>
我的gem是下面这个样子</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ tree
</span><span class='line'>.
</span><span class='line'>├── Gemfile
</span><span class='line'>├── Gemfile.lock
</span><span class='line'>├── guitar_chords.gemspec
</span><span class='line'>├── lib
</span><span class='line'>│   ├── guitar_chords
</span><span class='line'>│   │   ├── guitar_chord.rb
</span><span class='line'>│   │   ├── guitar_chords.yml
</span><span class='line'>│   │   └── version.rb
</span><span class='line'>│   └── guitar_chords.rb
</span><span class='line'>├── LICENSE
</span><span class='line'>├── Rakefile
</span><span class='line'>├── README.md
</span><span class='line'>└── spec
</span><span class='line'>    ├── guitar_chords_spec.rb
</span><span class='line'>    └── spec_helper.rb</span></code></pre></td></tr></table></div></figure>


<p>我尝试用SPEC进行TDD，虽然才写了几个test case，却也能在重构时帮我快速找出不少问题。<br/>
配置spec时，碰到一些依赖方面的问题，对于module，require之后才能include。然后路径
的问题，特别是相对路径，如果你在<code>guitar_chord.rb</code>中写<code>guitar_chords/guitar_chords.yml</code>的
话，不一定能找到，因为当前目录是你调用<code>spec</code>时所在的目录，并不是<code>guitar_chord.rb</code>的目录。
然后慢慢去翻书，找别人的代码参考，终于实现了个大概。</p>

<p>TODO：<br/>
 1. rake部分<br/>
 2. 用单例模式，在第一次加载<code>guitar_chords.rb</code>时load所有的和弦对象。<br/>
你可以查看源码，见<a href="https://github.com/feitian124/guitar_chords">这里</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[面了几家公司]]></title>
    <link href="http://feitian124.github.com/blog/2012/06/mian-liao-ji-jia-gong-si.html"/>
    <updated>2012-06-28T22:45:00+08:00</updated>
    <id>http://feitian124.github.com/blog/2012/06/mian-liao-ji-jia-gong-si</id>
    <content type="html"><![CDATA[<p>又到三四月份，我本没有离职的心思，不过旁边的同事都骚动不已，从小的到老的，原因不外乎公司待遇偏低。 从已经离开的同事的情形看，确实如此，因为普遍能到涨个1.5到2倍的待遇，可叹整个it行业是怎么回事，在前东家 可有可无，得不到重视，待遇迟迟没有提升；于是纷纷另寻高就，靠跳槽来提薪已成为一种趋势。在工作前5年尤盛， 本人也是个例子，不过我是反面教材，不说也罢。</p>

<!-- more -->


<p>我还是挺喜欢现在的公司的，环境还好，人际关系简单纯朴，工作不忙几乎不用加班，有足够的业余时间做感兴趣的东西。 不过大家都在找，我也找找看我是啥身价吧，说不定合适的，跳一跳也未尝不可。</p>

<p>在51job上更新了下简历，但只投了家ror的和中兴java的职位。工作地限杭州上海，一个星期收到4，5家面试。几乎都是做java的职位， 而我近一年主要作后端shell和plsql，java只是闲时android用用。而我现在更多的兴趣放在了ror上面，个人生产力，活跃的社区， 都对我很有吸引力。</p>

<p>列出几家的名字吧，算免费广告了，认识也算缘分:</p>

<ol>
<li><p>郎新 作电力系统的，java开发，在东部软件园内办公。给我的感觉是中规中矩的软件公司，好歹不会让我做长长的题目。</p></li>
<li><p>税友 作税务系统的，java开发，在高新软件园办公，环境比郎新好点。一去就做几页的隐私调查，爹妈工资啥的。 然后作题，有个递归的题目，还有几个列出10种方法提升性能之类的题目感觉有点意思。</p></li>
<li><p>华赛 华为做安全的子公司，也要填很多隐私的内容。不过技术面的面试官问的挺有水平，不会考你那些死记硬背的内容。 需要比较底层的知识，和我的知识结构不太匹配，其实有几个问题比如“设计一个协议可靠的传输2个文件”，当时没什么思路， 表现的不好，有点可惜。</p></li>
<li><p>通策 上市公司的软件事业部。hr挺真诚。</p></li>
<li><p>塔塔 上海外包到摩根。业务，技术，英语，综合能力,比较和我的竞争力匹配。</p></li>
</ol>


<p>从这次面试也有一点体会，虽然我有较多的工作经验，我还欠缺一些核心竞争力，业余学到的东西android和ruby等也没能为我加分。 以后要注意强化英语，学好ror并多动手。争取自己上一个有影响力的开源项目。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[node.js底层是基于什么原理]]></title>
    <link href="http://feitian124.github.com/blog/2012/06/node-dot-jsdi-ceng-shi-ji-yu-shi-yao-yuan-li.html"/>
    <updated>2012-06-28T22:44:00+08:00</updated>
    <id>http://feitian124.github.com/blog/2012/06/node-dot-jsdi-ceng-shi-ji-yu-shi-yao-yuan-li</id>
    <content type="html"><![CDATA[<p>今天在社区里面闲逛，发现node.js很火。之前也零零星星的看过一些node.js的介绍，知道它底层是google v8引擎的 基于事件模型的服务器软件。但脑子有几个why一直挥之不去：</p>

<!-- more -->


<p> 1.基于事件模型的理论并不新鲜，为什么没有在其他语言中实现。可能的原因是，其他语言都没有基于基于事件模型的概念或者习惯， 而在浏览器里运行的js则处处都是事件，onclick，onmouseover等等。
 2.在不是基于事件的http请求中，客户端和服务器建立tcp连接（http都是基于tcp吧），直到响应完毕，断掉tcp连接。 而现在node.js中在收到请求后，通知客户端断掉tcp连接，并说我之后会把找到的东西发给你。问题来了：服务器端是 怎么找到客户器端的呢？我们知道客户端去找服务器端是花了不少力气的，先dns，再ip；现在tcp断了，我不知道有什么机制 能让服务器找到客户端？难道node.js不是用在这样的场景么？</p>

<p>好吧，精力有限，还来不及去研究这个问题的答案。哪位同学了解的话，解答一下吧。纯属解惑。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[rails guide学习笔记1]]></title>
    <link href="http://feitian124.github.com/blog/2012/03/rails-guidexue-xi-bi-ji-1.html"/>
    <updated>2012-03-03T23:55:00+08:00</updated>
    <id>http://feitian124.github.com/blog/2012/03/rails-guidexue-xi-bi-ji-1</id>
    <content type="html"><![CDATA[<p>学习rails也有2，3个星期了。虽然有javaEE的使用经验，也较系统的提前学习了ruby，
不得不说学习起来还是有不少的难度。简单来说，ruby on raisl就相当于java中的
struts＋spring＋habinate，再加一个非常方便的代码生成工具。</p>

<!-- more -->


<p>同时，也建议初学者直接从RailsGuides官方文档作为学习的第一站，因为这里有对rails
方方面面的介绍，从怎么做到为什么这么做。以我为例，我学的第一本教材是那本著名的
《用rails进行敏捷开发》第4版（Agile Web Development），但由于没有一点概念，书中
说用rails new，generate，scaffold等时不知道他是想干什么，为什么他要这么做，只能跟
着书一步一步作，学习效果并不理想, 所有我只有fall back来看官方文档。也见解印证了我
的那个观点：官方文档永远是值得考虑认真学习的文档。</p>

<p>今天基本看完教材上model的部分,终于也能在学习中体验到爽的感觉。聪明的migrations,
聪明的验证和回调，聪明的实体关联，聪明的查询接口。ror的开发理念让很多东西都聪明起来，
当然，里面也有很多你一不注意就会犯错的小陷阱。比如哪些方法会触发回调，低性能的N＋1查
询问题等。我要在理解的基础上记忆的同时，增加实战经验。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hello World]]></title>
    <link href="http://feitian124.github.com/blog/2012/02/hello.html"/>
    <updated>2012-02-25T16:48:00+08:00</updated>
    <id>http://feitian124.github.com/blog/2012/02/hello</id>
    <content type="html"><![CDATA[<p><img src="http://www.gravatar.com/avatar/883afb8542f7d4a6f8cf2345ec9586f8?s=120" title="&#34;yunnuy log&#34;" alt="&#34;yunnuy log&#34;">
i want to have my own blog since long time ago, but all kinds of excuses stoped me.
As i&#8217;m learning ruby on rails, i&#8217;m kind of repick the good habit of study and writing
things down. It&#8217;s a good chance to start blog right here, right now.
I would like to keep my decision here:</p>

<!-- more -->


<ol>
<li><p>each week post at least two posts, and at least one of them must be technical related
in the next 6 month.</p></li>
<li><p>each week recite at least one article from &#8220;new concept english&#8221;. this not only help
me improve my english through good habit, but also help me reinforce the memory.</p></li>
</ol>

]]></content>
  </entry>
  
</feed>
